name: CMake
on: [push]
jobs:
  build-and-test-linux-clang:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Clang
      run: sudo apt-get install -y clang
    - name: Set Clang as default compiler
      run: sudo update-alternatives --set c++ /usr/bin/clang++
    - name: Create Build Folder
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=Release
    - name: CMake Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release
    - name: Run Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C Release --verbose
  build-and-test-linux-gcc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create Build Folder
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=Release
    - name: CMake Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release
    - name: Run Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C Release --verbose
  build-and-test-windows-vs:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Create Build Folder
      run: cmake -E make_directory ${{github.workspace}}/build
    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=Release
    - name: CMake Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config Release
    - name: Run Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C Release --verbose
  code-coverage-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install lcov
      run: sudo apt-get install -y lcov
    - name: Compile with coverage enabled
      run: g++ --coverage tests/tests.cpp -I include/ -std=c++17
    - name: Execute tests
      run: ./a.out
    - name: Run gcov
      run: gcov -abcfu tests.cpp
    - name: Generate coverage info
      run: lcov --no-external -d . --capture -o cov.dat
    - name: Generate HTML report
      run: genhtml cov.dat --output-directory coverage
    - uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/**/*